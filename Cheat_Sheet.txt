# git commands
git add --all

git commit -a -m "Initial Commit Flask App"

git push origin master

##### Deployment Manager Commands #####
gcloud deployment-manager deployments create devops-deployment --config deployment-manager-config.yaml

gcloud deployment-manager deployments delete devops-deployment


#####  DOCKER COMMANDS #########
docker build -t drehnstrom/devops-demo:latest .

# Run Docker image on Cloud Shell  
docker run -d -p 8080:8080 drehnstrom/devops-demo

# Run Docker image on Compute Engine VM 
docker run -d -p 80:8080 drehnstrom/converter-web-site:latest

#To find out status of containers
docker ps

#To stop container
docker stop <container-id-here>

# To Push, first log into docker
docker login

#To Push to Docker Hub
docker push drehnstrom/devops-demo

# GCP Container Builder to build Docker image
gcloud container builds submit --tag gcr.io/dev-ops-demo/devops-demo .

# Pull the container for the GCP Container Registry
gcloud docker -- pull gcr.io/dev-ops-demo/devops-demo:latest

# Run Docker image on local machine 
docker run -d -p 8080:8080 gcr.io/dev-ops-demo/devops-demo


# Create a cluster in specified project - uses all the defaults
gcloud container clusters create converter-cluster --zone "us-central1-a" --num-nodes "2" --project=dev-ops-demo

#  Get authorization to the Cluster
gcloud container clusters get-credentials converter-cluster --zone "us-central1-a" --project=dev-ops-demo

# Deploys the container bsed on YAML configuration
kubectl create -f gke-config.yaml

# To see the pods - Must be ready takes maybe a minute
kubectl get pods

# Need the IP Address - Type
kubectl get service

# Do a rolling updqte
kubectl rolling-update converter-
frontend --image=gcr.io/dev-ops-demo/converter-web-site:latest --image-pull-policy=Never

# To delete the service created by previous command
kubectl delete -f gke-config.yaml

# Delete the Cluster
gcloud container clusters delete converter-cluster --zone "us-central1-a"  --project=<project id here>


....

#### More Kubernetes Commands #####






# App Engine Commands
gcloud app create --region=us-central

# Deploy App Engine (Remove --no-promote to have this version take requests immediately)
gcloud app deploy --version=one --no-promote





