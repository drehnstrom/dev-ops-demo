# This installs all the libraries listed in the requirements.txt file into the lib folder.
# Required for App Engine Upload.
pip install -t lib -r requirements.txt

# git commands
git add --all

git commit -a -m "Initial Commit Flask App"

git push origin master

# To push changes to GitHub
git push github master


#Unit Testing Info - Tests are in file with *_test.py name
# To execute tests run:
pytest


# App Engine Commands
gcloud app create --region=us-central

# Deploy App Engine (Remove --no-promote to have this version take requests immediately)
gcloud app deploy --version=one --no-promote


# GCP Container Builder to build Docker image
gcloud container builds submit --tag gcr.io/dev-ops-demo/converter-web-site .

# Pull the container for the GCP Container Registry
gcloud docker -- pull gcr.io/dev-ops-demo/converter-web-site:latest

# Run Docker image on local machine 
docker run -d -p 80:80 gcr.io/dev-ops-demo/converter-web-site:latest


# Create a cluster in specified project - uses all the defaults
gcloud container clusters create converter-cluster --zone "us-central1-a" --num-nodes "2" --project=dev-ops-demo

#  Get authorization to the Cluster
gcloud container clusters get-credentials converter-cluster --zone "us-central1-a" --project=dev-ops-demo

# Deploys the container bsed on YAML configuration
kubectl create -f gke-config.yaml

# To see the pods - Must be ready takes maybe a minute
kubectl get pods

# Need the IP Address - Type
kubectl get service

# Do a rolling updqte
kubectl rolling-update converter-
frontend --image=gcr.io/dev-ops-demo/converter-web-site:latest --image-pull-policy=Never

# To delete the service created by previous command
kubectl delete -f gke-config.yaml

# Delete the Cluster
gcloud container clusters delete converter-cluster --zone "us-central1-a"  --project=<project id here>


....



